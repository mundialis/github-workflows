# Ruff configuration file: ruff.toml

required-version = ">=0.7.0"

line-length = 79

builtins = ["_"]

# Define linting rules selection
# See https://docs.astral.sh/ruff/rules/
# ## double comment does not exist in GRASS GIS config
# select all other options here and disable if needed
# in repositories usig this.
lint.select = [
    "A",      # flake8-builtins (A)
    "AIR",    # Airflow (AIR)
    "ANN",    # flake8-annotations (ANN)
    "ARG",    # flake8-unused-arguments (ARG)
##    "ASYNC",  # flake8-async (ASYNC)
    "B",      # flake8-bugbear (B)
    "BLE",    # flake8-blind-except (BLE)
##    "C4",     # flake8-comprehensions (C4)
##    "C90",    # mccabe (C90)
    "COM",    # flake8-commas (COM)
##    "CPY",    # flake8-copyright (CPY)
##    "DJ",     # flake8-django (DJ)
##    "DOC",    # pydoclint (DOC)
    "D",      # pydocstyle (D)
    "DTZ",    # flake8-datetimez (DTZ)
##    "EM",     # flake8-errmsg (EM)
    "E",      # pycodestyle Error (E)
##    "ERA",    # eradicate (ERA)
##    "EXE",    # flake8-executable (EXE)
    "FA",     # flake8-future-annotations (FA)
##    "FAST",   # FastAPI (FAST)
    "FBT",    # flake8-boolean-trap (FBT)
##    "FIX",    # flake8-fixme (FIX)
    "FLY",    # flynt (FLY)
    "F",      # Pyflakes (F)
    "FURB",   # refurb (FURB)
    "G",      # flake8-logging-format (G)
    "ICN",    # flake8-import-conventions (ICN)
    "I",      # isort (I)
##    "INP",    # flake8-no-pep420 (INP)
    "INT",    # flake8-gettext (INT)
    "ISC",    # flake8-implicit-str-concat (ISC)
    "LOG",    # flake8-logging (LOG)
    "N",      # pep8-naming (N)
    "NPY",    # NumPy-specific rules (NPY)
##    "PD",     # pandas-vet (PD)
    "PERF",   # Perflint (PERF)
    "PGH",    # pygrep-hooks (PGH)
    "PIE",    # flake8-pie (PIE)
    "PLC",    # Pylint Convention (PLC)
    "PLE",    # Pylint Error (PLE)
    "PLR",    # Pylint Refactor (PLR)
    "PLW",    # Pylint Warning (PLW)
    "PT",     # flake8-pytest-style (PT)
    "PTH",    # flake8-use-pathlib (PTH)
##    "PYI",    # flake8-pyi (PYI)
    "Q",      # flake8-quotes (Q)
    "RET",    # flake8-return (RET)
    "RSE",    # flake8-raise (RSE)
    "RUF",    # Ruff-specific rules (RUF)
    "S",      # flake8-bandit (S)
    "SIM",    # flake8-simplify (SIM)
    "SLF",    # flake8-self (SLF)
    "SLOT",   # flake8-slots (SLOT)
    "T10",    # flake8-debugger (T10)
##    "T20",    # flake8-print (T20)
    "TCH",    # flake8-type-checking (TCH)
##    "TD",     # flake8-todos (TD)
    "TID",    # flake8-tidy-imports (TID)
    "TRY",    # tryceratops (TRY)
    "UP",     # pyupgrade (UP)
    "W",      # pycodestyle Warning (W)
    "YTT",    # flake8-2020 (YTT)
]

# Overwrite the following sections as needed
# in the repositories using the lint workflow.

lint.ignore = [
      "D203",     # one-blank-line-before-class
      "D213",     # multi-line-summary-second-line
#     "E402",     # module-import-not-at-top-of-file
#     "E501",     # line-too-long
]

# [lint.per-file-ignores]
# Define file-specific linting rule ignores
# "lib_dop/r_dop_import_lib.py" = ["ERA001", "PLR2004"]
